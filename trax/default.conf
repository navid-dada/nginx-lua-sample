lua_package_path '/usr/local/openresty/site/lualib/resty/?.lua;lua-resty-kafka/lib/?.lua;/etc/nginx/conf.d/?.lua;/usr/local/openresty/lualib/?/init.lua;;';

init_worker_by_lua_block {
   require("unique_id");
   unique_id.init();

   require("kafka");

   ck = require "resty.cookie"
   redis = require "resty.redis"
   cjson = require "cjson"
   frox = require "frox"

   REDIS_SERVER = os.getenv("REDIS_SERVER")
   REDIS_PORT = os.getenv("REDIS_PORT")
   REDIS_AUTH_KEY = os.getenv("REDIS_AUTH_KEY")
   KAFKA_SERVER = os.getenv("KAFKA_SERVER")
   KAFKA_PORT = os.getenv("KAFKA_PORT")

}


server {
        server_name lua;
        listen 8053;
        access_log  off;
        default_type text/plain;
        location /hellolua {
            content_by_lua '
                    ngx.say("hello world!!!");
                ';
        }

        location /luafile {
            content_by_lua_file /usr/share/nginx/html/first.lua;
        }

        location ~ ^/redis-request/(?<reqid>[^/]+)/?$ {  
            content_by_lua_file /usr/share/nginx/html/my_redis.lua;
        }

        location ~ ^/kafka-request/(?<reqid>[^/]+)/?$ {
            content_by_lua_file /usr/share/nginx/html/my_kafka.lua;
        }

        location ~ ^/request-reply/(?<reqid>[^/]+)/?$ {
            content_by_lua_file /usr/share/nginx/html/request_reply.lua;
        }

        location ~ ^/resource/(?<state>[^/]+)/?$ {
            content_by_lua_block {
                ngx.say(ngx.var.state)
            }
        }

        location /luabody {
            content_by_lua_file /usr/share/nginx/html/read_body.lua;
        }
    }   



